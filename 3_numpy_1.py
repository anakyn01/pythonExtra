import numpy as np #넘파이 모듈을 부르고 별칭 설정
#배열 인덱싱 : 요소에 엑세스 자바스트립트이므로 0부터 시작
arr = np.array([1,2,3])
print(arr[0] + arr[1] + arr[2])

#2차원 일때
arr = np.array([[1,2,3],[4,5,6]]) #([0], [1])
print(arr[0,1]) #첫번째 배열에서 두번째

#3차원 일때
arr = np.array([[[1,2,3],[4,5,6],[7,8,9],[10,11,12]]])
print(arr[0,1,2])

#마지막 부터 접근할때 음수인덱싱 사용
arr = np.array([[1,2,3,4,5],[6,7,8,9,10]])
print('오른쪽 부터 접근할경우 음수 인덱싱을 사용: ',arr[1, -1])



#배열생성
#0차원 배열 : 값이 42인 0차원 배열을 생성
arr = np.array(42)
print(arr)
#1차원 배열
arr = np.array([1,2,3])
print(arr)
#2차원 배열
arr = np.array([[1,2,3],[4,5,6]])
print(arr)
#3차원 배열 행렬을 요소로 갖는 배열을 3차원 배열이라 합니다
# 수학에서 매우 중요한 개념 숫자를 직사각형 형태로 배열한 것
arr = np.array([[[1,2,3],[4,5,6]], [[1,2,3],[4,5,6]]])
print(arr)

whynot = '''
왜 중요할까?
행렬은 아래와 같은 분야에서 사용됩니다
1) 선형방정식(연립방정식) 
2) 컴퓨터 그래픽스
3) 데이터과학 & 머신러닝
4) 물리학
5) 암호학 

행렬로 할수 있는 연산
- 덧셈 / 뺄셈 , 전치, 역행렬, 행렬식
'''


#고차원 배열
arr = np.array([1,2,3,4], ndmin=5)
print("==============================")
print(arr)
print('몇 차원 배열 의므니까?', arr.ndim)

'''
현실세계의 데이터의 구조와 유사
빠른 계산 및 접근을 하기 위해서
중첩된 코드를 간결하게 사용하기 위해
복잡안 연산 가능하게 하기위해서
'''









arr = np.array([1,2,3,4,5])
print(arr)
#버전 확인
print(np.__version__)
#객체타입확인
print(type(arr))


what = '''
Numerical Python => NumPy 
1) 배열을 다루는데 사용됩니다
2) 3가지에 분류 
기초, 무작위, 우펑
3) 선형대수, 푸리에 변환, 행렬
4) 리스트와 다르게 메모리의 한 연속된 위치에 저장되므로
5) 최신 cpu아키텍처에 최적화 되어 있습니다
6) 설치 명령어 pip install numpy
7) 별칭을 사용합니다
'''
print(what)